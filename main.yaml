---
- name: Build the Kolla cluster
  hosts: localhost
  vars:
    os_username: "{{ lookup('env', 'OS_USERNAME') }}"
  tasks:
  - name: Create internal network
    os_network:
      name: "{{internal_network_name}}"

  - name: Create internal network subnet
    os_subnet:
      name: internal
      network_name: "{{internal_network_name}}"
      cidr: "{{internal_network_cidr}}"
      dns_nameservers: 8.8.8.8

  - name: Create external network
    os_network:
      name: "{{external_network_name}}"

  - name: Create external network subnet
    os_subnet:
      name: external
      network_name: "{{external_network_name}}"
      cidr: "{{external_network_cidr}}"
      dns_nameservers: 8.8.8.8

  - name: Create router
    os_router:
      name: "{{router_name}}"
      network: "public"  # external network
      interfaces:
        - internal
        - external

  - name: Create a port with a static VIP
    os_port:
      state: present
      name: "{{vip_name}}"
      network: "{{internal_network_name}}"
      fixed_ips:
        - ip_address: "{{internal_vip_address}}"

  - name: Make VIP ip accessible on all the controller node
    os_port:
      state: present
      key: "{{key}}"
      network: "{{internal_network_name}}"
      name: "{{item}}"
      allowed_address_pairs:
        - ip_address: "{{internal_vip_address}}"
    with_sequence: count="{{controllers}}" format="{{controller_name}}"

  - name: Boot the operator node
    os_server:
      name: "{{operator_name}}"
      state: present
      image: "{{image}}"
      security_groups: "{{secgroups}}"
      flavor: gp1.supersonic
      key_name: "{{key_name}}"
      network: "{{internal_network_name}}"
      meta: groups=operator
      wait: yes
    register: kolla_operator
    async: 7200
    poll: 0

  - name: Boot the controllers node
    os_server:
      name: "{{item}}"
      state: present
      image: "{{image}}"
      key_name: "{{key_name}}"
      security_groups: "{{secgroups}}"
      flavor: "{{flavor}}"
      meta: groups=controllers
      nics:
        - port-name: "{{item}}"
      wait: yes
    with_sequence: count="{{controllers}}" format="{{controller_name}}"
    register: kolla_controllers
    async: 7200
    poll: 0

  - name: Boot the compute nodes
    os_server:
      name: "{{item}}"
      state: present
      image: "{{image}}"
      key_name: "{{key_name}}"
      security_groups: "{{secgroups}}"
      flavor: "{{flavor}}"
      meta: groups=compute
      nics:
        - net-name: "{{internal_network_name}}"
        - net-name: "{{external_network_name}}"
      wait: yes
      auto_ip: no
    register: kolla_compute_nodes
    with_sequence: count="{{compute_nodes}}" format="{{compute_node_name}}"
    async: 7200
    poll: 0

  # Wait for the compute nodes to be ready so that we can attach
  # the floating ip as soon as we can.
  - name: Wait for the compute nodes to boot
    async_status: jid={{item.ansible_job_id}}
    register: os_compute_jobs
    until: os_compute_jobs.finished
    retries: 300
    with_items: "{{kolla_compute_nodes.results}}"

  - name: Refresh compute nodes facts
    os_server_facts:
      server: "{{os_username}}-kolla-compute*"

  - name: Attach floating ips for the compute nodes on the internal network
    os_floating_ip:
      state: present
      reuse: yes
      server: "{{item.name}}"
      fixed_address: "{{item['addresses'][internal_network_name][0]['addr']}}"
      network: "{{public_network}}"
      wait: True
    with_items: "{{openstack_servers}}"

  # Wait for the rest of the cluster to be up and running.
  - name: Wait for controller/operator nodes to boot
    async_status: jid={{item.ansible_job_id}}
    register: os_jobs
    until: os_jobs.finished
    retries: 300
    with_items:
      - "{{kolla_controllers.results}}"
      - "{{kolla_operator}}"

  - name: Refresh node facts after floating IP attach
    os_server_facts:
      server: "{{os_username}}-kolla-*"

  - name: Add all nodes to the inventory
    add_host:
      name: "{{item.name}}"
      groups:
        - "{{item.metadata.groups}}"
        - "all"
      ansible_host: "{{item.public_v4}}"
      ansible_user: "{{ansible_user}}"
      instance_private_v4: "{{item['addresses'][internal_network_name][0]['addr']}}"
      ansible_ssh_private_key_file: "{{key}}"
      ansible_ssh_common_args: -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
    with_items:
      - "{{openstack_servers}}"

- name: Configure nodes
  hosts: all
  become: yes
  become_method: sudo
  strategy: free
  gather_facts: False

  tasks:
    - name: Copy the public key on all the nodes for the root user
      raw: "cp /home/{{ansible_user}}/.ssh/authorized_keys /root/.ssh/"
                
- name: Configure the operator node
  hosts: operator
  become: yes
  become_method: sudo
  gather_facts: False

  tasks:
    - name: install python 2
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

    - name: Copy the private key on the operator node for the root user
      copy:
        src: "{{key}}"
        dest: /root/.ssh/id_rsa
        mode: 0600

    - name: Install all the ansible/kolla dependencies
      apt:
       name: "{{item}}"
      with_items:
        - python-dev
        - libffi-dev
        - gcc
        - libssl-dev
        - python-pip

    - name: Upgrade/install pip and ansible
      pip:
        name: "{{item}}"
        state: forcereinstall
      with_items:
        - pip
        - ansible

    - name: Install kolla from github
      pip:
        name: git+https://github.com/openstack/kolla.git@{{kolla_version}}
        editable: False

    - name: Link the kolla's configuration files in /etc
      file:
        src: /usr/local/share/kolla/etc_examples/kolla
        dest: /etc/kolla
        state: link

    - name: Link the kolla's inventory example file in /root
      file:
        src: /usr/local/share/kolla/ansible/inventory/multinode
        dest: /root/multinode
        state: link

    - name: Setup /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{item}}$'
        line: "{{hostvars[item]['instance_private_v4']}} {{item}}"
        state: present
      with_items: "{{ groups['all'] }}"

    - name: Set kolla_base_distro in global.yml
      lineinfile:
        dest: /etc/kolla/globals.yml
        regexp: '.*kolla_base_distro:.*$'
        line: 'kolla_base_distro: "ubuntu"'
        state: present

    - name: Set VIP in global.yml
      lineinfile:
        dest: /etc/kolla/globals.yml
        regexp: '^kolla_internal_vip_address:.*$'
        line: 'kolla_internal_vip_address: "{{internal_vip_address}}"'
        state: present

    - name: Disable StrictHostKeyChecking
      lineinfile:
        dest: /etc/ssh/ssh_config
        regexp: '.*StrictHostKeyChecking .*'
        line: 'StrictHostKeyChecking no'
        state: present
